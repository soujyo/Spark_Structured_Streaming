{
  "paragraphs": [
    {
      "text": "%md \nAnalyze the input datasets which includes the electricity consumption in KWH per half-hour basis in the path \u0027/data/exercise\u0027 and determine the approach to deal with updated records with a watermark of 60 minutes;",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 20:04:55.724",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAnalyze the input datasets which includes the electricity consumption in KWH per half-hour basis in the path \u0026lsquo;/data/exercise\u0026rsquo; and determine the approach to deal with updated records with a watermark of 60 minutes;\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589831773320_-157241774",
      "id": "paragraph_1589831773320_-157241774",
      "dateCreated": "2020-05-18 19:56:13.320",
      "dateStarted": "2020-05-18 20:04:55.739",
      "dateFinished": "2020-05-18 20:04:55.752",
      "status": "FINISHED"
    },
    {
      "text": "import org.apache.spark.sql.types.{StringType, StructType, TimestampType,IntegerType,FloatType}\n\nprintln(\"Welcome to Spark Structured Streaming Tutorial\")",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 19:36:17.108",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Welcome to Spark Structured Streaming Tutorial\nimport org.apache.spark.sql.types.{StringType, StructType, TimestampType, IntegerType, FloatType}\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589828692998_-894642876",
      "id": "paragraph_1589828692998_-894642876",
      "dateCreated": "2020-05-18 19:04:52.998",
      "dateStarted": "2020-05-18 19:36:17.129",
      "dateFinished": "2020-05-18 19:36:17.332",
      "status": "FINISHED"
    },
    {
      "title": "Prepare Data and Schema",
      "text": "val input_dir \u003d \"/data/\" // Initialize data directory to be read from.\nval inputSchema \u003d  new StructType().add(\"MacId\", StringType).add(\"DateTime\", TimestampType).add(\"KWH-hh\",FloatType)\n// Add the schema for data to be read with structure MacId:StringType,DateTime:TimestampType,KWH-hh):IntegerType",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 19:37:01.468",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34minput_dir\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m \u003d /data/\n\u001b[1m\u001b[34minputSchema\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.types.StructType\u001b[0m \u003d StructType(StructField(MacId,StringType,true), StructField(DateTime,TimestampType,true), StructField(KWH-hh,FloatType,true))\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589827034092_1306433914",
      "id": "paragraph_1589312501267_1648295091",
      "dateCreated": "2020-05-18 18:37:14.092",
      "dateStarted": "2020-05-18 19:37:01.480",
      "dateFinished": "2020-05-18 19:37:01.734",
      "status": "FINISHED"
    },
    {
      "title": "Create the Stream reading from files",
      "text": "  val streamingInputDF \u003d\n    spark\n      .readStream // `readStream` instead of `read` for creating streaming DataFrame\n      .schema(inputSchema) // Set the schema of the JSON data // Treat a sequence of files as a stream by picking one file at a time\n      .csv(input_dir) // read from the data directory\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 19:37:03.207",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mstreamingInputDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [MacId: string, DateTime: timestamp ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589827034092_-407660999",
      "id": "paragraph_1589313021260_1748617835",
      "dateCreated": "2020-05-18 18:37:14.092",
      "dateStarted": "2020-05-18 19:37:03.222",
      "dateFinished": "2020-05-18 19:37:03.525",
      "status": "FINISHED"
    },
    {
      "title": "Add watermark to handle delayed records",
      "text": "val streamingGroupedDF\u003d ??? // Add watermark of 60 mins to handle delayed records",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 19:54:04.803",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589831047707_466165960",
      "id": "paragraph_1589831047707_466165960",
      "dateCreated": "2020-05-18 19:44:07.707",
      "status": "READY"
    },
    {
      "title": "Start the Streaming Job",
      "text": "val query \u003d\n    streamingInputDF\n    .writeStream // writeSTream to write the output to the sink in streams\n    .outputMode(\"update\") // Output mode is update\n    .format(\"memory\") // Sink mode is memory to query on top of the output data in realtime\n    .queryName(\"consumption\") // Provide a view name to query the data in sql\n    .option(\"truncate\", false)\n    .start()  // Start the streaming data\n    \n    // Write to a memory stream named \u0027consumption\u0027 which would be querable using SQL",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 19:37:05.312",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mquery\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.streaming.StreamingQuery\u001b[0m \u003d org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@6f4cc8d4\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589827034092_1249734874",
      "id": "paragraph_1589313016658_1070192101",
      "dateCreated": "2020-05-18 18:37:14.092",
      "dateStarted": "2020-05-18 19:37:05.326",
      "dateFinished": "2020-05-18 19:37:05.604",
      "status": "FINISHED"
    },
    {
      "text": "%md Copy each of the csv files one by one from \u0027/data/exercise\u0027 to \u0027/data/\u0027 path and run this below query everytime and observe the outputs.",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 20:06:08.023",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eCopy each of the csv files one by one from \u0026lsquo;/data/exercise\u0026rsquo; to \u0026lsquo;/data/\u0026rsquo; path and run this below query everytime and observe the outputs.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589832361706_1745541080",
      "id": "paragraph_1589832361706_1745541080",
      "dateCreated": "2020-05-18 20:06:01.707",
      "dateStarted": "2020-05-18 20:06:08.038",
      "dateFinished": "2020-05-18 20:06:08.057",
      "status": "FINISHED"
    },
    {
      "title": "Query the Stream",
      "text": "%sql select * from consumption;\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 20:06:23.430",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "MacId": "string",
                      "DateTime": "string",
                      "KWH-hh": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "MacId\tDateTime\tKWH-hh\nMAC003718\t2012-10-17 13:00:00.0\t0.09\nMAC003718\t2012-10-17 13:30:00.0\t0.16\nMAC003718\t2012-10-17 14:00:00.0\t0.212\nMAC003718\t2012-10-17 14:30:00.0\t0.145\nMAC003718\t2012-10-17 15:00:00.0\t0.104\nMAC003718\t2012-10-17 15:30:00.0\t0.122\nMAC003718\t2012-10-17 16:00:00.0\t0.184\nMAC003718\t2012-10-17 16:30:00.0\t0.171\nMAC003718\t2012-10-17 17:00:00.0\t0.246\nMAC003718\t2012-10-17 17:30:00.0\t0.196\nMAC003718\t2012-10-17 18:00:00.0\t0.229\nMAC003718\t2012-10-17 18:30:00.0\t0.446\nMAC003718\t2012-10-17 19:00:00.0\t0.465\nMAC003718\t2012-10-17 19:30:00.0\t0.305\nMAC003718\t2012-10-17 20:00:00.0\t0.39\nMAC003718\t2012-10-17 20:30:00.0\t0.404\nMAC003718\t2012-10-17 21:00:00.0\t0.39\nMAC003718\t2012-10-17 21:30:00.0\t0.288\nMAC003718\t2012-10-17 22:00:00.0\t0.507\nMAC003718\t2012-10-17 22:30:00.0\t0.432\nMAC003718\t2012-10-17 23:00:00.0\t0.609\nMAC003718\t2012-10-17 23:30:00.0\t0.104\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589827034093_-10715827",
      "id": "paragraph_1589313028505_294909212",
      "dateCreated": "2020-05-18 18:37:14.093",
      "dateStarted": "2020-05-18 20:06:23.446",
      "dateFinished": "2020-05-18 20:06:23.516",
      "status": "FINISHED"
    },
    {
      "text": "query.stop()\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-18 20:06:29.229",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589829395647_555285533",
      "id": "paragraph_1589829395647_555285533",
      "dateCreated": "2020-05-18 19:16:35.647",
      "dateStarted": "2020-05-18 20:06:29.240",
      "dateFinished": "2020-05-18 20:06:29.542",
      "status": "FINISHED"
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589830604688_2084555432",
      "id": "paragraph_1589830604688_2084555432",
      "dateCreated": "2020-05-18 19:36:44.688",
      "status": "READY"
    }
  ],
  "name": "Exercise : Structured Streaming With Update Mode With Watermark",
  "id": "2FB7TH382",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}