{
 "paragraphs": [
  {
   "text": "%md \n## Append Mode\n\n#### This is the default mode, where only the new rows added to the Result Table since the last trigger will be outputted to the sink. This is supported for only those queries where rows added to the Result Table is never going to change. Hence, this mode guarantees that each row will be output only once (assuming fault-tolerant sink).For example, queries with only select, where, map, flatMap, filter, join, etc. will support Append mode.",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 09:54:15.998",
   "config": {
    "editorSetting": {
     "language": "text",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "colWidth": 12.0,
    "editorMode": "ace/mode/text",
    "fontSize": 9.0,
    "results": {},
    "enabled": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "HTML",
      "data": "<div class=\"markdown-body\">\n<h2>Append Mode</h2>\n<h4>This is the default mode, where only the new rows added to the Result Table since the last trigger will be outputted to the sink. This is supported for only those queries where rows added to the Result Table is never going to change. Hence, this mode guarantees that each row will be output only once (assuming fault-tolerant sink).For example, queries with only select, where, map, flatMap, filter, join, etc. will support Append mode.</h4>\n\n</div>"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589481457069_452400605",
   "id": "paragraph_1589480259821_552852928",
   "dateCreated": "2020-05-14 18:37:37.070",
   "dateStarted": "2020-05-15 10:50:04.147",
   "dateFinished": "2020-05-15 10:50:04.278",
   "status": "FINISHED"
  },
  {
   "title": "",
   "text": "%md\n# Watermark\n\n#### Watermarking is a useful method which helps a Stream Processing Engine to deal with lateness. Basically, a watermark is a threshold to specify how long the system waits for late events. If an arriving event lies within the watermark, it gets used to update a query. Otherwise, if it’s older than the watermark, it will be dropped and not further processed by the Streaming Engine.",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 09:54:16.114",
   "config": {
    "colWidth": 12.0,
    "fontSize": 9.0,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "text",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/text",
    "title": false
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "HTML",
      "data": "<div class=\"markdown-body\">\n<h1>Watermark</h1>\n<h4>Watermarking is a useful method which helps a Stream Processing Engine to deal with lateness. Basically, a watermark is a threshold to specify how long the system waits for late events. If an arriving event lies within the watermark, it gets used to update a query. Otherwise, if it’s older than the watermark, it will be dropped and not further processed by the Streaming Engine.</h4>\n\n</div>"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589481611093_-86298609",
   "id": "paragraph_1589481611093_-86298609",
   "dateCreated": "2020-05-14 18:40:11.093",
   "dateStarted": "2020-05-15 10:50:04.346",
   "dateFinished": "2020-05-15 10:50:04.365",
   "status": "FINISHED"
  },
  {
   "settings": {
    "params": {},
    "forms": {}
   },
   "apps": [],
   "status": "READY",
   "text": "%md\nimport org.apache.spark.sql.types.{StringType, StructType, TimestampType,IntegerType,FloatType}\n\nprintln(\"Welcome to Spark Structured Streaming Tutorial\")",
   "id": "",
   "config": {}
  },
  {
   "title": "Prepare Data and Schema",
   "text": "val input_dir = \"/data/\" // Initialize data directory to be read from.\nval jsonSchema = new StructType().add(\"time\", TimestampType).add(\"action\", StringType) // Add the schema for data to be read.",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:50:22.243",
   "config": {
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "colWidth": 12.0,
    "editorMode": "ace/mode/scala",
    "fontSize": 9.0,
    "title": true,
    "results": {},
    "enabled": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34minput_dir\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /data/\n\u001b[1m\u001b[34mjsonSchema\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.types.StructType\u001b[0m = StructType(StructField(time,TimestampType,true), StructField(action,StringType,true))\n"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589481457072_1854101403",
   "id": "paragraph_1589312501267_1648295091",
   "dateCreated": "2020-05-14 18:37:37.072",
   "dateStarted": "2020-05-15 10:50:22.268",
   "dateFinished": "2020-05-15 10:50:22.462",
   "status": "FINISHED"
  },
  {
   "title": "Create the Stream reading from files",
   "text": "  val streamingInputDF =\n    spark\n      .readStream // `readStream` instead of `read` for creating streaming DataFrame\n      .schema(jsonSchema) // Set the schema of the JSON data // Treat a sequence of files as a stream by picking one file at a time\n      .json(input_dir) // read from the data directory\n",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:50:23.932",
   "config": {
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "colWidth": 12.0,
    "editorMode": "ace/mode/scala",
    "fontSize": 9.0,
    "title": true,
    "results": {},
    "enabled": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mstreamingInputDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [time: timestamp, action: string]\n"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589481457072_209327977",
   "id": "paragraph_1589313021260_1748617835",
   "dateCreated": "2020-05-14 18:37:37.072",
   "dateStarted": "2020-05-15 10:50:23.947",
   "dateFinished": "2020-05-15 10:50:24.122",
   "status": "FINISHED"
  },
  {
   "title": "GroupBy with Watermark to count the occurrences of every action during a specified window  ",
   "text": "val streamingGroupedDF =\n        streamingInputDF.toDF(\"time\", \"action\") \n        .withWatermark(\"time\", \"20 seconds\") // Add watermark for late arrivals up to 20 seconds allowed\n        .groupBy(col(\"action\"), window(col(\"time\"), \"30 seconds\")) // GroupBy on action coulmn with  a window size of 30 seconds based on event time of time column \n        .count()",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:50:25.789",
   "config": {
    "colWidth": 12.0,
    "fontSize": 9.0,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala",
    "title": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mstreamingGroupedDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [action: string, window: struct<start: timestamp, end: timestamp> ... 1 more field]\n"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589484051932_1247379584",
   "id": "paragraph_1589484051932_1247379584",
   "dateCreated": "2020-05-14 19:20:51.932",
   "dateStarted": "2020-05-15 10:50:25.807",
   "dateFinished": "2020-05-15 10:50:26.128",
   "status": "FINISHED"
  },
  {
   "title": "Write the Stream",
   "text": "val query =\n    streamingGroupedDF\n    .writeStream // writeSTream to write the output to the sink in streams\n    .outputMode(\"append\") // Output mode is append\n    .format(\"memory\") // Sink mode is memory to query on top of the output data in realtime\n    .queryName(\"Streamer\") // Provide a view name to query the data in sql\n    .option(\"truncate\", false)\n    .start()  // Start the streaming data",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:50:37.458",
   "config": {
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "colWidth": 12.0,
    "editorMode": "ace/mode/scala",
    "fontSize": 9.0,
    "title": true,
    "results": {},
    "enabled": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mquery\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.streaming.StreamingQuery\u001b[0m = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@f64eb8\n"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589481457072_277527061",
   "id": "paragraph_1589313016658_1070192101",
   "dateCreated": "2020-05-14 18:37:37.072",
   "dateStarted": "2020-05-15 10:50:37.478",
   "dateFinished": "2020-05-15 10:50:37.709",
   "status": "FINISHED"
  },
  {
   "text": "Thread.sleep(5000)",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:51:18.462",
   "config": {
    "colWidth": 12.0,
    "fontSize": 9.0,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala"
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": []
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589539875416_-1958673387",
   "id": "paragraph_1589539875416_-1958673387",
   "dateCreated": "2020-05-15 10:51:15.426",
   "dateStarted": "2020-05-15 10:51:18.485",
   "dateFinished": "2020-05-15 10:51:23.654",
   "status": "FINISHED"
  },
  {
   "title": "Query the Stream",
   "text": "%sql select * from Streamer ;\n",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:51:25.659",
   "config": {
    "editorSetting": {
     "language": "sql",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "colWidth": 12.0,
    "editorMode": "ace/mode/sql",
    "fontSize": 9.0,
    "title": true,
    "results": {
     "0": {
      "graph": {
       "mode": "table",
       "height": 300.0,
       "optionOpen": false,
       "setting": {
        "table": {
         "tableGridState": {},
         "tableColumnTypeState": {
          "names": {
           "action": "string",
           "window": "string",
           "count": "string"
          },
          "updated": false
         },
         "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
         "tableOptionValue": {
          "useFilter": false,
          "showPagination": false,
          "showAggregationFooter": false
         },
         "updated": false,
         "initialized": false
        }
       },
       "commonSetting": {}
      }
     },
     "1": {
      "graph": {
       "mode": "table",
       "height": 300.0,
       "optionOpen": false,
       "setting": {
        "table": {
         "tableGridState": {},
         "tableColumnTypeState": {
          "names": {
           "action": "string",
           "time": "string",
           "count": "string"
          },
          "updated": false
         },
         "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
         "tableOptionValue": {
          "useFilter": false,
          "showPagination": false,
          "showAggregationFooter": false
         },
         "updated": false,
         "initialized": false
        }
       },
       "commonSetting": {}
      }
     },
     "2": {
      "graph": {
       "mode": "table",
       "height": 300.0,
       "optionOpen": false,
       "setting": {
        "table": {
         "tableGridState": {},
         "tableColumnTypeState": {
          "names": {
           "action": "string",
           "total_count": "string"
          },
          "updated": false
         },
         "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
         "tableOptionValue": {
          "useFilter": false,
          "showPagination": false,
          "showAggregationFooter": false
         },
         "updated": false,
         "initialized": false
        }
       },
       "commonSetting": {}
      }
     }
    },
    "enabled": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TABLE",
      "data": "action\twindow\tcount\nOpen\t[2016-07-26 08:17:00.0,2016-07-26 08:17:30.0]\t4\nClose\t[2016-07-26 08:17:30.0,2016-07-26 08:18:00.0]\t3\nClose\t[2016-07-26 08:17:00.0,2016-07-26 08:17:30.0]\t1\nOpen\t[2016-07-26 08:15:00.0,2016-07-26 08:15:30.0]\t1\nClose\t[2016-07-26 08:15:30.0,2016-07-26 08:16:00.0]\t2\nClose\t[2016-07-26 08:16:30.0,2016-07-26 08:17:00.0]\t1\nOpen\t[2016-07-26 08:17:30.0,2016-07-26 08:18:00.0]\t7\nOpen\t[2016-07-26 07:17:00.0,2016-07-26 07:17:30.0]\t1\nOpen\t[2016-07-26 08:16:30.0,2016-07-26 08:17:00.0]\t1\n"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589481457072_640673400",
   "id": "paragraph_1589313028505_294909212",
   "dateCreated": "2020-05-14 18:37:37.072",
   "dateStarted": "2020-05-15 10:51:25.675",
   "dateFinished": "2020-05-15 10:51:25.728",
   "status": "FINISHED"
  },
  {
   "title": "Find the count of actions for a each window",
   "text": "%sql\nselect action, date_format(window.end, \"MMM-dd HH:mm:ss\") as time, count from Streamer order by time, action;",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:51:29.309",
   "config": {
    "colWidth": 12.0,
    "fontSize": 9.0,
    "enabled": true,
    "results": {
     "0": {
      "graph": {
       "mode": "table",
       "height": 300.0,
       "optionOpen": false,
       "setting": {
        "table": {
         "tableGridState": {},
         "tableColumnTypeState": {
          "names": {
           "action": "string",
           "time": "string",
           "count": "string"
          },
          "updated": false
         },
         "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
         "tableOptionValue": {
          "useFilter": false,
          "showPagination": false,
          "showAggregationFooter": false
         },
         "updated": false,
         "initialized": false
        }
       },
       "commonSetting": {}
      }
     }
    },
    "editorSetting": {
     "language": "sql",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/sql",
    "title": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TABLE",
      "data": "action\ttime\tcount\nOpen\tJul-26 07:17:30\t1\nOpen\tJul-26 08:15:30\t1\nClose\tJul-26 08:16:00\t2\nClose\tJul-26 08:17:00\t1\nOpen\tJul-26 08:17:00\t1\nClose\tJul-26 08:17:30\t1\nOpen\tJul-26 08:17:30\t4\nClose\tJul-26 08:18:00\t3\nOpen\tJul-26 08:18:00\t7\n"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589536049964_1119352731",
   "id": "paragraph_1589536049964_1119352731",
   "dateCreated": "2020-05-15 09:47:29.965",
   "dateStarted": "2020-05-15 10:51:29.323",
   "dateFinished": "2020-05-15 10:51:29.448",
   "status": "FINISHED"
  },
  {
   "title": "Find the total counts of each action in the stream",
   "text": "%sql\nselect action, sum(count) as total_count from Streamer group by action order by action;",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:51:33.067",
   "config": {
    "colWidth": 12.0,
    "fontSize": 9.0,
    "enabled": true,
    "results": {
     "0": {
      "graph": {
       "mode": "table",
       "height": 300.0,
       "optionOpen": false,
       "setting": {
        "table": {
         "tableGridState": {},
         "tableColumnTypeState": {
          "names": {
           "action": "string",
           "total_count": "string"
          },
          "updated": false
         },
         "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
         "tableOptionValue": {
          "useFilter": false,
          "showPagination": false,
          "showAggregationFooter": false
         },
         "updated": false,
         "initialized": false
        }
       },
       "commonSetting": {}
      }
     }
    },
    "editorSetting": {
     "language": "sql",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/sql",
    "title": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TABLE",
      "data": "action\ttotal_count\nClose\t7\nOpen\t14\n"
     }
    ]
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589536219120_2138131894",
   "id": "paragraph_1589536219120_2138131894",
   "dateCreated": "2020-05-15 09:50:19.120",
   "dateStarted": "2020-05-15 10:51:33.083",
   "dateFinished": "2020-05-15 10:51:34.141",
   "status": "FINISHED"
  },
  {
   "title": "Stop the Stream",
   "text": "\nquery.stop()",
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:50:33.010",
   "config": {
    "colWidth": 12.0,
    "fontSize": 9.0,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala",
    "title": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": []
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589482499300_-1902897895",
   "id": "paragraph_1589482499300_-1902897895",
   "dateCreated": "2020-05-14 18:54:59.300",
   "dateStarted": "2020-05-15 10:50:33.036",
   "dateFinished": "2020-05-15 10:50:33.200",
   "status": "FINISHED"
  },
  {
   "user": "anonymous",
   "dateUpdated": "2020-05-15 10:50:33.297",
   "config": {
    "colWidth": 12.0,
    "fontSize": 9.0,
    "enabled": true,
    "results": {},
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "editorMode": "ace/mode/scala"
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "apps": [],
   "progressUpdateIntervalMs": 500,
   "jobName": "paragraph_1589482536169_-904210333",
   "id": "paragraph_1589482536169_-904210333",
   "dateCreated": "2020-05-14 18:55:36.169",
   "status": "FINISHED"
  }
 ],
 "name": "Structured Streaming With Append Mode with Watermark",
 "id": "2F9ZH9CAE",
 "defaultInterpreterGroup": "spark",
 "version": "0.9.0-preview1",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false
 },
 "info": {
  "isRunning": false
 }
}